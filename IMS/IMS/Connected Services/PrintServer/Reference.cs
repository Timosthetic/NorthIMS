//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//
//     对此文件的更改可能导致不正确的行为，并在以下条件下丢失:
//     代码重新生成。
// </auto-generated>
//------------------------------------------------------------------------------

namespace PrintServer
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PrintData", Namespace="http://schemas.datacontract.org/2004/07/WindowsServiceSample.PrintServer")]
    public partial class PrintData : object
    {
        
        private string BatchNumField;
        
        private string FlagFixedField;
        
        private string MaterialCodeField;
        
        private string MaterialNameField;
        
        private int MaterialtTypeField;
        
        private string ProCodeField;
        
        private string ProNameField;
        
        private string SerialNumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BatchNum
        {
            get
            {
                return this.BatchNumField;
            }
            set
            {
                this.BatchNumField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FlagFixed
        {
            get
            {
                return this.FlagFixedField;
            }
            set
            {
                this.FlagFixedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaterialCode
        {
            get
            {
                return this.MaterialCodeField;
            }
            set
            {
                this.MaterialCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaterialName
        {
            get
            {
                return this.MaterialNameField;
            }
            set
            {
                this.MaterialNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaterialtType
        {
            get
            {
                return this.MaterialtTypeField;
            }
            set
            {
                this.MaterialtTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProCode
        {
            get
            {
                return this.ProCodeField;
            }
            set
            {
                this.ProCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProName
        {
            get
            {
                return this.ProNameField;
            }
            set
            {
                this.ProNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNum
        {
            get
            {
                return this.SerialNumField;
            }
            set
            {
                this.SerialNumField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PrintServer.IPrintService")]
    public interface IPrintService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrintService/PrinterHelper", ReplyAction="http://tempuri.org/IPrintService/PrinterHelperResponse")]
        System.Threading.Tasks.Task<string> PrinterHelperAsync(PrintServer.PrintData printData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrintService/DownloadStream", ReplyAction="http://tempuri.org/IPrintService/DownloadStreamResponse")]
        System.Threading.Tasks.Task<System.IO.Stream> DownloadStreamAsync(string fileName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public interface IPrintServiceChannel : PrintServer.IPrintService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public partial class PrintServiceClient : System.ServiceModel.ClientBase<PrintServer.IPrintService>, PrintServer.IPrintService
    {
        
        /// <summary>
        /// 实现此分部方法，配置服务终结点。
        /// </summary>
        /// <param name="serviceEndpoint">要配置的终结点</param>
        /// <param name="clientCredentials">客户端凭据</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public PrintServiceClient() : 
                base(PrintServiceClient.GetDefaultBinding(), PrintServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.SOAPEndPoint.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PrintServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(PrintServiceClient.GetBindingForEndpoint(endpointConfiguration), PrintServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PrintServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(PrintServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PrintServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(PrintServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PrintServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<string> PrinterHelperAsync(PrintServer.PrintData printData)
        {
            return base.Channel.PrinterHelperAsync(printData);
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> DownloadStreamAsync(string fileName)
        {
            return base.Channel.DownloadStreamAsync(fileName);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.SOAPEndPoint))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("找不到名称为“{0}”的终结点。", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.SOAPEndPoint))
            {
                return new System.ServiceModel.EndpointAddress("http://192.168.5.126:8001/WCF_PrintService/soap");
            }
            throw new System.InvalidOperationException(string.Format("找不到名称为“{0}”的终结点。", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return PrintServiceClient.GetBindingForEndpoint(EndpointConfiguration.SOAPEndPoint);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return PrintServiceClient.GetEndpointAddress(EndpointConfiguration.SOAPEndPoint);
        }
        
        public enum EndpointConfiguration
        {
            
            SOAPEndPoint,
        }
    }
}
